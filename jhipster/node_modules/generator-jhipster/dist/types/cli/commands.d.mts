export default defaultCommands;
/**
 * Copyright 2013-2023 the original author or authors from the JHipster project.
 *
 * This file is part of the JHipster project, see https://www.jhipster.tech/
 * for more information.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
declare const defaultCommands: {
    add: {
        desc: string;
    };
    app: {
        desc: string;
    };
    aws: {
        desc: string;
    };
    'azure-app-service': {
        desc: string;
    };
    'azure-spring-cloud': {
        desc: string;
    };
    'ci-cd': {
        desc: string;
    };
    cloudfoundry: {
        desc: string;
    };
    'docker-compose': {
        desc: string;
    };
    download: {
        desc: string;
        cliOnly: boolean;
        argument: string[];
    };
    entity: {
        desc: string;
    };
    entities: {
        desc: string;
    };
    'export-jdl': {
        desc: string;
    };
    gae: {
        desc: string;
    };
    'generate-blueprint': {
        desc: string;
    };
    gradle: {
        desc: string;
    };
    heroku: {
        desc: string;
    };
    info: {
        desc: string;
    };
    init: {
        desc: string;
    };
    java: {
        desc: string;
    };
    jdl: {
        alias: string;
        desc: string;
        help: string;
    };
    kubernetes: {
        alias: string;
        desc: string;
    };
    'kubernetes-helm': {
        alias: string;
        desc: string;
    };
    'kubernetes-knative': {
        alias: string;
        desc: string;
    };
    languages: {
        desc: string;
    };
    maven: {
        desc: string;
    };
    openshift: {
        desc: string;
    };
    page: {
        desc: string;
    };
    'project-name': {
        desc: string;
    };
    run: {
        desc: string;
        argument: string[];
    };
    'spring-boot': {
        desc: string;
    };
    'spring-service': {
        alias: string;
        desc: string;
    };
    'spring-controller': {
        desc: string;
    };
    'openapi-client': {
        desc: string;
    };
    upgrade: {
        desc: string;
    };
    workspaces: {
        desc: string;
    };
};
